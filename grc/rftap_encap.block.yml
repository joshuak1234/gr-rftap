id: rftap_rftap_encap
label: RFtap Encapsulation
category: '[RFtap]'

templates:
  imports: import rftap
  make: rftap.rftap_encap(${encapsulation_from}, ${custom_dlt}, ${custom_dissector_name})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)

parameters:
  - id: encapsulation_from
    label: Type
    value: 0
    dtype: enum
    options: [0, 1, 2, 3]
    option_labels: ['From PDU "dlt" key', 'From PDU "dissector" key', 'Custom DLT', 'Custom dissector']
  - id: custom_dlt
    label: Data Link Type
    value: -1
    type: int
  - id: custom_dissector_name
    label: Dissector
    type: string

inputs:
- label: in
  dtype: message

outputs:
- label: out
  dtype: message

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
